@startuml

class IpV4Address
{
   + IpV4Address(std::string)
   + IpV4Address(uint8, uint8, uint8, uint8)
   + to_string() std::string
   + get_address() uint32_t
}

class IpV6Address
{
   + IpV6Address(std::string)
   + IpV6Address(uint16, uint16, uint16, uint16, uint16, uint16, uint16, uint16)
   + to_string() std::string
}

class SocketAddress
{
   - m_ip_addr : variant<IpV4Address, IpV6Address>
   - m_port : uint16

   + SocketAddress(T ipAddr, uint16 port)
   + get_ip_addr(): const T&
   + get_port: uint16
}

class ITcpStream
{ 
   + connect(SocketAddress address): bool
   + disconnect(): bool
   + receive(uint8_t* buffer, const size_t buffer_length): int 
   + send(const uint8_t* buffer, const size_t bytes_to_send): int
   + get_address(): SocketAddress
   + is_connected(): bool
   + is_v4_socket(): bool
   + is_v6_socket(): bool
}

class ITcpListener
{
   + bind(SocketAddress address): bool
   + listen(): bool
   + accept(): shared_ptr<ITcpStream>
   + disconnect(): bool
   + get_address(): SocketAddress
   + is_connected(): bool
   + is_v4_socket(): bool
   + is_v6_socket(): bool
}

class TcpStream
{
   - m_mutex : std::mutex
   - m_fd : int
   - m_address : SocketAddress

   + connect(SocketAddress address): bool
   + disconnect(): bool
   + receive(uint8_t* buffer, const size_t buffer_length): int 
   + send(const uint8_t* buffer, const size_t bytes_to_send): int
   + get_address(): SocketAddress
   + is_connected(): bool
   + is_v4_socket(): bool
   + is_v6_socket(): bool
}

class TcpListener
{
   - m_mutex : std::mutex
   - m_fd : int
   - m_address : SocketAddress

   + TcpListener()
   + bind(SocketAddress address): bool
   + listen(): bool
   + accept(): shared_ptr<ITcpStream>
   + disconnect(): bool
   + get_address(): SocketAddress
   + is_connected(): bool
   + is_v4_socket(): bool
   + is_v6_socket(): bool
}

class ActiveTcpStream
{

}

class ActiveTcpListener
{

}

SocketAddress o-- IpV4Address
SocketAddress o-- IpV6Address

ITcpStream --> SocketAddress

ITcpListener --> SocketAddress

TcpStream --|> ITcpStream

TcpListener --|> ITcpListener
TcpListener --> TcpStream

ActiveTcpStream o-- TcpStream

ActiveTcpListener o-- TcpListener
ActiveTcpListener o-- TcpStream

@enduml